# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    auth.twig_extension:
        class: AuthBundle\TwigExtension\AuthExtension
        tags:
          - { name: twig.extension }

    multilingual.user_language.event_listener.locale_listener:
        class: AppBundle\EventListener\LocaleListener
        arguments: ["@router", "%kernel.default_locale%", "%jms_i18n_routing.locales%"]
        tags:
          - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, }

    multilingual.translator.twig_extension:
        class: AppBundle\TwigExtension\TranslatorExtension
        tags:
          - { name: twig.extension }


    # makes classes in Bundles available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services

    AppBundle\:
        resource: '../../src/AppBundle/*'
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AuthBundle\:
            resource: '../../src/AuthBundle/*'
            exclude: '../../src/AuthBundle/{Entity,Repository,Tests}'

    AuthBundle\Controller\:
        resource: '../../src/AuthBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

