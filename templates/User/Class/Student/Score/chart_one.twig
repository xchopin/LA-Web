{% set i18n = dictionary.class.tab_one.chart_one %}

{% set labels = [] %}
{% set labels_color = [] %}
{% set values = [] %}
{% set colors = {
        devRend: "#3d2aa2",
        resActs : "#1976d2",
        ressCons : "#03a9f4",
        nbClicks : "#4dd0e1",
        regHebdo : "#e53935",
        regQuoti : "#ec407a",
        consTerm : "#e040fb",
        questForum: "#66bb6a",
        repForum: "#7cb342",
        demandeAide: "#558b2f",
   }
%}
    <div class="row">
        <div id='chart_one'>
        <div class="score-chart-padding">
            <div class="ui grid">
                <div class="eight wide column">
                    <div class="chart-container">
                        <canvas id="activity_chart"></canvas>
                    </div>
                </div>
                <div class="one wide column"></div>
                <div class="seven wide column">
                    {% for legend in i18n.legend %}
                        <p class="legend-category" align="center">
                            <strong>{{ legend.name }}</strong>
                        </p>
                        <hr>
                        {% for key, value in legend.labels %}
                            {% if indicators[key] is defined and indicators[key] is not null %}
                                <span style="background-color: {{ colors[key] }};" class="dot"></span> &nbsp; {{ value }}
                                <br>
                                {% set labels = labels|merge([value]) %}
                                {% set labels_color = labels_color|merge([colors[key]]) %}
                                {% set math = indicators[key]|split('/') %}
                                {% set values = values|merge([(math[0] / math[1] * 100)|round(1, 'floor')]) %}
                            {% endif %}
                        {% endfor %}
                    {% endfor %}

                    <div class='hide' id="score-success">
                        <span id="score-value"></span>% {{ i18n.objective_probability}}
                    </div>
                </div>
            </div>
        </div>

        <br>
        <div class="row">
            <div class="ui stackable grid">
                <div class="four wide column">
                    <div class="row">
                        <div id='last-week-progression' class="ui statistic">
                            <div class="value">
                                <i class="green caret up icon"></i> +2.8%
                            </div>
                            <div class="label"> {{ i18n.since_last_week }} </div>
                        </div>
                    </div>
                </div>
                <div class="six wide column">
                    <div class="row"> {{ i18n.personal_objective }} <i class="ui teal info circle icon"></i></div>
                    <div class="row">
                        <br>
                        <div class="ui fluid selection dropdown">
                            <input type="hidden" name="objective">
                            <i class="dropdown icon"></i>
                            <div class="default text">{{ i18n.set_objective }}</div>
                            <div class="menu">
                                <div class="item" data-value="8">8</div>
                                <div class="item" data-value="10">10</div>
                                <div class="item" data-value="12">12</div>
                                <div class="item" data-value="14">14</div>
                                <div class="item" data-value="16">16</div>
                                <div class="item" data-value="18">18</div>
                                <div class="item" data-value="20">20</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="one wide column"></div>
                <div class="five wide column">
                    <div class="row"></div>
                    <div class="row">
                        <button class="teal ui button dispute-score">{{ i18n.dispute_score }}</button>
                    </div>
                </div>
            </div>
            <p class="score-legal-notice">{{ i18n.disclaimer }}</p>
        </div>
    </div>
</div>



{% block javascripts %}
<script>
    $(document).ready( () => {

        let scores = {{ scores|json_encode|raw }};
        let labels = {{ labels|json_encode|raw }};
        let label_colors = {{ labels_color|json_encode|raw }};
        let activityData = {{ values|json_encode|raw }};
        let activityDataVelocity = [0.9, 0.6, 0.7 , 0.5, 0.8, 0.6, 0.6, 0.4, 0.6, 0.6]; // max value: 2Ï€

        $('.selection.dropdown > .menu').on('click', function(){
            $('#score-success').removeClass('hide');
            let target = $('.selection.dropdown').dropdown('get value');
            $('#score-value').text(scores[target]);
        });


        // Chart
        let ctx = $("#activity_chart");
        let data = {
            datasets: [{
                data: activityData,
                backgroundColor: label_colors
            }],
            labels: labels
        };

         new Chart(ctx, {
            data: data,
            type: 'polarArea',
            options: {
                elements: {
                    arc: {
                        angle: activityDataVelocity,
                    }
                },
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    display: false
                },
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        top: 10,
                        bottom: 0
                    }
                },
                animation: {
                    duration: 500
                },
                scale: {
                    display: true,

                    ticks: {
                        display: false,
                        min: 0,
                        max: 100,
                    },
                    gridLines:{
                        display: true,
                        color: '#d4d2ca',
                    },
                },
                tooltips: {
                    callbacks: {
                        label: function(tooltipItem, data) {
                            let dataset = data.datasets[tooltipItem.datasetIndex];
                            let currentValue = dataset.data[tooltipItem.index];
                            return ' ' + currentValue + '%';
                        },
                        title: function(tooltipItem, data) {
                            return data.labels[tooltipItem[0].index];
                        }
                    }
                },
            }
        });
    })
</script>

{% endblock %}